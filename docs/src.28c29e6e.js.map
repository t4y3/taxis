{"version":3,"sources":["../../src/timeline.ts","../../src/taxis.ts","taxis-demo.ts","index.ts"],"names":[],"mappings":"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","file":"src.28c29e6e.js","sourceRoot":"../demo/src","sourcesContent":["export class TaxisTimeline extends HTMLElement {\n  // TODO\n  axes: any;\n  totalTime: number;\n  debug: boolean;\n\n  $pane: HTMLElement;\n  $timeline: HTMLElement;\n  $current: HTMLInputElement;\n  $progress: HTMLElement;\n  $labels: NodeListOf<HTMLElement>;\n  $bars: NodeListOf<HTMLElement>;\n  $barsBegin: NodeListOf<HTMLInputElement>;\n  $barsEnd: NodeListOf<HTMLInputElement>;\n  $previous: HTMLElement;\n  $playPause: HTMLElement;\n  $next: HTMLElement;\n  playing: Boolean;\n  previous: Boolean;\n  next: Boolean;\n  skip: number;\n  private editing: boolean = false;\n\n  constructor(axes, totalTime, debug = true) {\n    // Always call super first in constructor\n    super();\n    // write element functionality in here\n    this.attachShadow({ mode: \"open\" }); // sets and returns 'this.shadowRoot'\n\n    this.axes = axes;\n    this.totalTime = totalTime;\n    this.debug = debug;\n    this.shadowRoot.innerHTML = this.template(axes, totalTime);\n    this.$pane = this.shadowRoot.querySelector(\"#pane\");\n    this.$timeline = this.shadowRoot.querySelector(\"#timeline\");\n    this.$current = this.shadowRoot.querySelector(\"#current\");\n    this.$progress = this.shadowRoot.querySelector(\"#progress\");\n    this.$labels = this.shadowRoot.querySelectorAll(\".label\");\n    this.$bars = this.shadowRoot.querySelectorAll(\".bar\");\n    this.$barsBegin = this.shadowRoot.querySelectorAll(\".begin\");\n    this.$barsEnd = this.shadowRoot.querySelectorAll(\".end\");\n    this.$previous = this.shadowRoot.querySelector(\"#previous\");\n    this.$playPause = this.shadowRoot.querySelector(\"#play-pause\");\n    this.$next = this.shadowRoot.querySelector(\"#next\");\n    this.playing = true;\n    this.previous = false;\n    this.next = false;\n    this.skip = -1;\n\n    // event\n    this.$previous.addEventListener(\"click\", (e) => {\n      this.previous = true;\n    });\n    this.$playPause.addEventListener(\"click\", (e) => {\n      this.playing = !this.playing;\n    });\n    this.$next.addEventListener(\"click\", (e) => {\n      this.next = true;\n    });\n    for (let i = 0, len = this.$bars.length; i < len; i++) {\n      const bar = this.$bars[i];\n      bar.addEventListener(\"click\", (e) => {\n        const target = e.currentTarget as HTMLElement;\n        const idx = Number(target.getAttribute(\"idx\"));\n        this.skip = idx;\n      });\n\n      if (!this.debug) {\n        continue;\n      }\n\n      const barBegin = this.$barsBegin[i];\n      const barEnd = this.$barsEnd[i];\n      // TODO: Refactor\n      barBegin.addEventListener(\"input\", (e) => {\n        const time = Number(barBegin.value);\n        if (Number(this.$barsEnd[i].value) < time) {\n          e.preventDefault();\n          return;\n        }\n\n        if (Number.isFinite(this.axes[i].position)) {\n          this.axes[i].position = time;\n          // adjusting the duration so that the endAt doesn't change.\n          this.axes[i].duration =\n            this.axes[i].endAt - (this.axes[i].delay + this.axes[i].position);\n        } else {\n          const target = this.axes.find(\n            (axis) => axis.key === this.axes[i].position\n          );\n          this.axes[i].delay = time - target.endAt;\n          // adjusting the duration so that the endAt doesn't change.\n          this.axes[i].duration =\n            this.axes[i].endAt - (this.axes[i].delay + target.endAt);\n        }\n      });\n\n      // TODO: Refactor\n      barEnd.addEventListener(\"input\", (e) => {\n        const time = Number(barEnd.value);\n        if (time < Number(this.$barsBegin[i].value)) {\n          e.preventDefault();\n          return;\n        }\n\n        if (Number.isFinite(this.axes[i].position)) {\n          this.axes[i].duration =\n            time - (this.axes[i].position + this.axes[i].delay);\n        } else {\n          const target = this.axes.find(\n            (axis) => axis.key === this.axes[i].position\n          );\n          this.axes[i].duration = time - target.endAt - this.axes[i].delay;\n        }\n      });\n    }\n    this.$labels.forEach((label) => {\n      label.addEventListener(\"click\", (e) => {\n        const target = e.currentTarget as HTMLElement;\n        const idx = Number(target.getAttribute(\"idx\"));\n        this.skip = idx;\n      });\n    });\n    this.$current.addEventListener(\"input\", (e) => {\n      this.editing = true;\n      const time = Number(this.$current.value);\n      this.__updateProgressPosition(time);\n      this.__updateBar(this.totalTime);\n    });\n\n    this.$current.addEventListener(\"change\", (e) => {\n      this.editing = false;\n    });\n  }\n\n  attributeChangedCallback() {}\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  getAxes() {\n    return this.axes;\n  }\n\n  get(beginAt) {\n    const now = Date.now();\n    const time = Number(this.$current.value);\n    let elapsedTime = now - beginAt;\n\n    if (!this.playing) {\n      beginAt = now - time;\n      elapsedTime = time;\n    }\n    if (this.editing) {\n      beginAt = now - time;\n      elapsedTime = time;\n    }\n    if (-1 < this.skip) {\n      const axis = this.axes[this.skip];\n      beginAt = now - axis.beginAt;\n      elapsedTime = axis.beginAt;\n      this.skip = -1;\n    }\n    if (this.previous) {\n      this.previous = false;\n      beginAt = now;\n      elapsedTime = 0;\n    }\n    if (this.next) {\n      this.next = false;\n      beginAt = now - this.totalTime;\n      elapsedTime = this.totalTime;\n    }\n\n    return {\n      beginAt,\n      elapsedTime,\n      editing: this.editing,\n    };\n  }\n\n  update(time, totalTime, axes) {\n    this.axes = axes;\n    this.totalTime = totalTime;\n\n    this.$current.setAttribute(\"max\", totalTime);\n    this.$current.value = time;\n\n    this.__updateProgressPosition(time);\n    this.__updateBar(totalTime);\n    this.debug && this.__updateBarRange(totalTime);\n    this.__updateScale(totalTime);\n  }\n\n  template(axes, total) {\n    let labels = \"\";\n    let bars = \"\";\n    let scaleLabels = \"\";\n    for (let i = 0; i < axes.length; i++) {\n      const axis = axes[i];\n      labels += `<div class=\"row\" id=\"row-${i}\"><div class=\"label\" idx=\"${i}\">${axis.key}</div></div>`;\n\n      let barController = '';\n      if (this.debug) {\n        barController = `\n          <input class=\"begin\" type=\"range\" min=\"0\" max=\"0\" step=\"10\" value=\"${axis.beginAt}\">\n          <input class=\"end\" type=\"range\" min=\"0\" max=\"0\" step=\"10\" value=\"${axis.endAt}\">\n        `;\n      }\n      bars += `\n        <div class=\"row\">\n          <div class=\"bar bar--${this.debug ? 'debug' : 'default' }\" idx=\"${i}\"></div>\n          ${barController}\n        </div>`;\n      if (this.debug) {\n\n      }\n    }\n\n    for (let i = 0, sec = Math.floor(total / 1000); i < sec; i++) {\n      scaleLabels += `<div class=\"scale-label\" style=\"--sec: ${i + 1}\">${\n        i + 1\n      }s</div>`;\n    }\n    return `\n      <style>\n        * {\n          box-sizing: border-box;\n        }\n        :host {\n          display: block;\n          height: 100%;\n        }\n        .container {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          background-color: #313131;\n          color: #eeeeee;\n          position: relative;\n          --tools-height: 40px;\n          --controls-height: 40px;\n        }\n        .tools {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-shrink: 0;\n          height: var(--tools-height);\n          border-bottom: 1px solid #202020;\n        }\n        .tools__item {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 20px;\n          margin: 0 8px;\n          color: #eeeeee;\n        }\n        .tools__item div {\n          width: 100%;\n          cursor: pointer;\n        }\n        .tools__item div:hover {\n          opacity: .6;\n        }\n        .tools__item svg {\n          fill: currentColor;\n        }\n        .controls {\n          display: flex;\n          flex-shrink: 0;\n          height: var(--controls-height);\n          border-bottom: 1px solid #202020;\n        }\n        .pane {\n          display: flex;\n          flex: 1;\n          overflow: scroll;\n          scroll-behavior: smooth;\n        }\n        .head {\n          flex-shrink: 0;\n          flex-basis: 20%;\n          max-width: 200px;\n          min-width: 0;\n        }\n        .body {\n          flex: 1;\n          position: relative;\n        }\n        .actions {\n          height: 100%;\n          border-right: 1px solid #222322;\n        }\n        .rows {\n          border-right: 1px solid #222322;\n        }\n        .row {\n          display: flex;\n          align-items: center;\n          height: 24px;\n          border-bottom: 1px solid #202020;\n          position: relative;\n        }\n        .row input[type=\"range\"] {\n          position: absolute;\n          inset: 0;\n        }\n        .label {\n          padding-left: 12px;\n          font-size: 12px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          cursor: pointer;\n        }\n        .bar {\n          height: 100%;\n          background-color: #545454;\n          opacity: .5;\n          transform-origin: left;\n          cursor: pointer;\n          position: relative;\n        }\n        .bar.bar--debug::before {\n          content: \"\";\n          display: block;\n          width: 6px;\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          margin: 4px;\n          border-radius: 2px;\n          background-color: darkgray;\n        }\n        .bar.bar--debug::after {\n          content: \"\";\n          display: block;\n          width: 6px;\n          position: absolute;\n          right: 0;\n          top: 0;\n          bottom: 0;\n          margin: 4px;\n          border-radius: 2px;\n          background-color: darkgray;\n        }\n        .bar.bar--active {\n          opacity: 1;\n        }\n        .progress {\n          position: absolute;\n          top: var(--tools-height);\n          bottom: 0;\n          left: 0;\n          width: 2px;\n          margin-left: min(20%, 200px);\n          background-color: #71A0EB;\n          opacity: 0.6;\n        }\n        .progress::before {\n          content: \"\";\n          display: block;\n          width: 20px;\n          height: 30px;\n          background-color: #53aeff;\n          margin-left: -9px;\n        }\n        .progress::after {\n          content: \"\";\n          display: block;\n          border-top: 10px solid #53aeff;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          margin-left: -9px;\n        }\n        .current {\n          position: absolute;\n          top: var(--tools-height);\n          height: var(--controls-height);\n          left: -12px;\n          right: -12px;\n          margin-left: min(20%, 200px);\n        }\n        input[type=\"range\"] {\n          -webkit-appearance: none;\n          appearance: none;\n          margin: 0;\n          cursor: pointer;\n          outline: none;\n        }\n        input[type=\"range\"]::-webkit-slider-thumb {\n          opacity: 0;\n        }\n        input[type=\"range\"]::-moz-range-thumb {\n          opacity: 0;\n        }\n        /* Firefoxで点線が周りに表示されてしまう問題の解消 */\n        input[type=\"range\"]::-moz-focus-outer {\n          border: 0;\n        }\n        .current input[type=\"range\"] {\n          height: var(--controls-height);\n          width: 100%;\n          background: transparent;\n        }\n        input.begin[type=\"range\"],\n        input.end[type=\"range\"] {\n          height: 100%;\n          width: calc(100% + 12px);\n          background: transparent;\n          pointer-events: none;\n          margin-left: -6px;\n        }\n        input.begin[type=\"range\"]::-webkit-slider-thumb,\n        input.end[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          pointer-events: auto;\n          opacity: 0;   \n          width: 12px;\n          height: 100%;\n          cursor: ew-resize;\n        }\n        input.begin[type=\"range\"]::-moz-range-thumb,\n        input.end[type=\"range\"]::-moz-range-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          pointer-events: auto;\n          opacity: 0;   \n          width: 12px;\n          height: 100%;\n          cursor: ew-resize;\n        }\n        input.begin[type=\"range\"]::-webkit-slider-thumb {\n          background: darkgreen;\n          transform: translateX(50%);\n        }\n        input.begin[type=\"range\"]::-moz-range-thumb {\n          background: darkgreen;\n          transform: translateX(50%);\n        }\n        input.end[type=\"range\"]::-webkit-slider-thumb {\n          background: indianred;\n          transform: translateX(-50%);\n        }\n        input.end[type=\"range\"]::-moz-range-thumb {\n          background: indianred;\n          transform: translateX(-50%);\n        }\n        .scale {\n          position: relative;\n          height: 100%;\n        }\n        .scale-s,\n        .scale-100ms {\n          height: 50%;\n        }\n        .scale-s {\n          /*\n            total / 1s \n            e.g. 6000 / 1000\n            x / 1000 = 6\n            calc(100% / calc(var(--total) / 1000))\n           */\n          --x: calc(100% / calc(var(--total) / 1000));\n          background: repeating-linear-gradient(90deg, transparent 0, transparent calc(var(--x) - 1px), #202020 calc(var(--x) - 1px), #202020 var(--x));\n          border-bottom: 1px solid #202020;\n        }\n        .scale-100ms {\n          --x: calc(100% / calc(var(--total) / 1000) / 10);\n          background: repeating-linear-gradient(90deg, transparent 0, transparent calc(var(--x) - 1px), #202020 calc(var(--x) - 1px), #202020 var(--x));\n        }\n        .scale-label {\n          --x: calc(100% / calc(var(--total) / 1000));\n          position: absolute;\n          top: 0;\n          left: calc(var(--x) * var(--sec));\n          font-size: 10px;\n          font-style: italic;\n          transform: translateX(calc(-100% - 4px));\n        }\n      </style>\n      <div class=\"container\">\n        <div class=\"tools\">\n          <div class=\"tools__item\">\n            <div id=\"previous\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.75 20C2.75 20.5523 3.19772 21 3.75 21C4.30228 21 4.75 20.5523 4.75 20L4.75 4C4.75 3.44772 4.30229 3 3.75 3C3.19772 3 2.75 3.44772 2.75 4V20Z\"/>\n                <path d=\"M20.75 19.0526C20.75 20.4774 19.1383 21.305 17.9803 20.4748L7.51062 12.9682C6.50574 12.2477 6.54467 10.7407 7.5854 10.073L18.0551 3.35665C19.2198 2.60946 20.75 3.44583 20.75 4.82961L20.75 19.0526Z\"/>\n              </svg>\n            </div>\n          </div>\n          <div class=\"tools__item\">\n            <div id=\"play-pause\">\n              <svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n                <!-- Generator: Sketch 59.1 (86144) - https://sketch.com -->\n                <title>ic_fluent_video_play_pause_24_filled</title>\n                <desc>Created with Sketch.</desc>\n                <g id=\"🔍-Product-Icons\" stroke=\"none\" stroke-width=\"1\" >\n                    <g id=\"ic_fluent_video_play_pause_24_filled\" fill-rule=\"nonzero\">\n                        <path d=\"M3.65140982,6.61646219 L11.1528787,11.3693959 C11.3672679,11.5052331 11.4827597,11.722675 11.4993749,11.9464385 L11.4984593,7.25 C11.4984593,6.83578644 11.8342458,6.5 12.2484593,6.5 L15.2484593,6.5 C15.6626729,6.5 15.9984593,6.83578644 15.9984593,7.25 L15.9984593,16.75 C15.9984593,17.1642136 15.6626729,17.5 15.2484593,17.5 L12.2484593,17.5 C11.8342458,17.5 11.4984593,17.1642136 11.4984593,16.75 L11.4993494,12.0597632 C11.4826318,12.2835468 11.3670166,12.5009613 11.1525249,12.6366956 L3.65105604,17.3837618 C3.15168144,17.6997752 2.5,17.3409648 2.5,16.75 L2.5,7.25 C2.5,6.65884683 3.15205264,6.30006928 3.65140982,6.61646219 Z M21.2477085,6.50037474 C21.661922,6.50037474 21.9977085,6.83616118 21.9977085,7.25037474 L21.9977085,16.7496253 C21.9977085,17.1638388 21.661922,17.4996253 21.2477085,17.4996253 L18.2477085,17.4996253 C17.8334949,17.4996253 17.4977085,17.1638388 17.4977085,16.7496253 L17.4977085,7.25037474 C17.4977085,6.83616118 17.8334949,6.50037474 18.2477085,6.50037474 L21.2477085,6.50037474 Z\" id=\"🎨-Color\"></path>\n                    </g>\n                </g>\n              </svg>\n            </div>\n          </div>\n          <div class=\"tools__item\">\n            <div id=\"next\">\n              <svg   viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M21 4C21 3.44772 20.5523 3 20 3C19.4477 3 19 3.44772 19 4V20C19 20.5523 19.4477 21 20 21C20.5523 21 21 20.5523 21 20V4Z\"/>\n                <path d=\"M3 4.94743C3 3.5226 4.61175 2.69498 5.7697 3.52521L16.2394 11.0318C17.2443 11.7523 17.2053 13.2593 16.1646 13.927L5.69492 20.6434C4.53019 21.3905 3 20.5542 3 19.1704V4.94743Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div class=\"controls\">\n          <div class=\"head\"><div class=\"actions\"></div></div>\n          <div class=\"body\">\n            <div class=\"scale\" id=\"scale\" style=\"--total: ${total}\">\n              <div class=\"scale-s\"></div>\n              <div class=\"scale-100ms\"></div>\n              ${scaleLabels}\n            </div>\n          </div>\n        </div>\n        <div id=\"pane\" class=\"pane\">\n          <div class=\"head\">\n            <div class=\"rows\">\n              ${labels}\n            </div>\n          </div>\n          <div id=\"timeline\" class=\"body\">\n            <div class=\"rows\">\n              ${bars}\n            </div>\n          </div>\n        </div>\n        <div class=\"current\">\n          <input id=\"current\" type=\"range\" min=\"0\" max=\"0\" step=\"any\" value=\"0\">\n        </div>\n        <div id=\"progress\" class=\"progress\"></div>\n      </div>\n    `;\n  }\n\n  __updateScale(total) {\n    const test = this.shadowRoot.querySelector(\".test\");\n    test && test.remove();\n    this.shadowRoot.querySelectorAll(\".scale-label\").forEach((elm) => {\n      elm.remove();\n    });\n    const scale = this.shadowRoot.querySelector<HTMLElement>(\".scale\");\n    scale.style.setProperty(\"--total\", total);\n\n    let scaleLabels = \"\";\n    for (let i = 0, sec = Math.floor(total / 1000); i < sec; i++) {\n      scaleLabels += `<div class=\"scale-label\" style=\"--sec: ${i + 1}\">${\n        i + 1\n      }s</div>`;\n    }\n    const fragment = document.createElement(\"div\");\n    fragment.className = \"test\";\n    fragment.innerHTML = scaleLabels;\n    this.shadowRoot.querySelector(\".scale\").appendChild(fragment);\n  }\n\n  __updateProgressPosition(time) {\n    const width = this.$timeline.clientWidth;\n    const x = Math.min(time / this.totalTime, 1) * width;\n    this.$progress.style.transform = `translateX(${x}px)`;\n  }\n\n  __updateBarRange(totalTime) {\n    for (let i = 0; i < this.$bars.length; i++) {\n      const axis = this.axes[i];\n      this.$barsBegin[i].setAttribute(\"max\", totalTime);\n      this.$barsBegin[i].value = axis.beginAt;\n      this.$barsEnd[i].setAttribute(\"max\", totalTime);\n      this.$barsEnd[i].value = axis.endAt;\n    }\n  }\n\n  __updateBar(totalTime: number) {\n    const width = this.$timeline.clientWidth;\n\n    const scaleX = width / totalTime;\n    for (let i = 0; i < this.$bars.length; i++) {\n      const axis = this.axes[i];\n\n      const barBegin = axis.beginAt * scaleX;\n      const barWidth = (axis.endAt - axis.beginAt) * scaleX;\n\n      this.$bars[i].style.transform = `translateX(${barBegin}px)`;\n      this.$bars[i].style.width = `${barWidth}px`;\n      if (0 < axis.progress && !axis.pass) {\n        this.$bars[i].classList.add(\"bar--active\");\n      } else {\n        this.$bars[i].classList.remove(\"bar--active\");\n      }\n    }\n  }\n}\n\nwindow.customElements.define(\"taxis-timeline\", TaxisTimeline);\n","import { TaxisTimeline } from \"./timeline\";\n\ntype Axis = {\n  key: string;\n  beginAt?: number; // TODO: delete\n  endAt?: number; // TODO: delete\n  duration: number;\n  delay: number;\n  position: string | number;\n  progress: number;\n  enter: boolean;\n  pass: boolean;\n};\n\ntype Axes = Map<string, Axis>;\n\ntype TimelineOption = {\n  container: HTMLElement;\n  debug: boolean;\n}\n\ntype Option = {\n  timeline?: TimelineOption;\n};\n\nconst initialAxis: Axis = {\n  key: \"\",\n  beginAt: 0,\n  endAt: 0,\n  duration: 0,\n  delay: 0,\n  position: 0,\n  progress: 0,\n  enter: false,\n  pass: false,\n};\n\nconst Events = {\n  ENTER: \"enter\",\n  LEAVE: \"leave\",\n  PASS: \"pass\",\n} as const;\n\ntype EventName = typeof Events[keyof typeof Events];\n\nexport class Taxis {\n  private axes: Axis[];\n  private beginAt: number;\n  private requestID: number;\n  private tickerFn: (delta: number, axis: Axes) => void;\n  private timeline: TaxisTimeline;\n\n  get totalTime() {\n    if (!this.axes.length) {\n      return 0;\n    }\n    return Math.max(...this.axes.map((item) => item.endAt));\n  }\n\n  get totalTimeForTimeline() {\n    return this.totalTime + 500;\n  }\n\n  get everyPassed() {\n    return this.axes.every((item) => item.pass);\n  }\n\n  constructor(private readonly option: Option = {}) {\n    this.axes = [];\n  }\n\n  restart() {\n    this.beginAt = Date.now();\n  }\n\n  getAxis({ key }) {\n    return this.axes.find((item) => item.key === key);\n  }\n\n  getAxes() {\n    return this.axes;\n  }\n\n  // entered(key: string) {\n  // }\n  //\n  // left(key: string) {\n  // }\n  //\n  // passed(key: string) {\n  // }\n\n  add(\n    key: string,\n    duration: number,\n    delay: number = 0,\n    position?: number | string\n  ) {\n    let beginAt = this.totalTime + delay;\n    if (position !== undefined) {\n      if (Number.isFinite(position)) {\n        beginAt = <number>position + delay;\n      } else {\n        const axis = this.getAxis({ key: position });\n        beginAt = axis.endAt + delay;\n      }\n    } else {\n      const last = this.axes[this.axes.length - 1];\n      position = !!last ? last.key : 0;\n    }\n\n    this.axes.push({\n      ...initialAxis,\n      key,\n      beginAt,\n      endAt: beginAt + duration,\n      duration,\n      delay,\n      position,\n    });\n    this.sort();\n    return this;\n  }\n\n  begin() {\n    // TODO: delete\n    if (this.option.timeline) {\n      this.timeline = new TaxisTimeline(this.axes, this.totalTimeForTimeline, this.option.timeline.debug);\n      this.option.timeline.container.appendChild(this.timeline);\n    }\n\n    this.beginAt = Date.now();\n    this.__tick();\n  }\n\n  reset() {\n    cancelAnimationFrame(this.requestID);\n  }\n\n  ticker(fn: (delta: number, axis: Axes) => void) {\n    this.tickerFn = fn;\n  }\n\n  private __tick() {\n    let beginAt = this.beginAt;\n    let elapsedTime = Date.now() - beginAt;\n    let editing = false;\n    if (this.option.timeline) {\n      // TODO: thin out\n      this.axes = this.recalculation(this.timeline.getAxes());\n      const {\n        beginAt: __beginAt,\n        elapsedTime: __elapsedTime,\n        editing: __editing,\n      } = this.timeline.get(this.beginAt);\n      beginAt = __beginAt;\n      elapsedTime = __elapsedTime;\n      editing = __editing;\n    }\n\n    this.beginAt = beginAt;\n\n    // TODO: totalTimeを超えたらここの処理はする必要がない\n    this.axes.forEach((item, i) => {\n      const tick = elapsedTime - item.beginAt;\n      const progress = Math.max(0, Math.min(tick / item.duration, 1));\n      const enter = item.beginAt <= elapsedTime;\n      const pass = item.endAt < elapsedTime;\n\n      // // When passed through\n      // if (pass && !item.pass) {\n      //   // TODO\n      // }\n      // // When entered\n      // if (enter && !item.enter) {\n      //   // TODO\n      // }\n      // if (progress === 0 && 0 < item.progress) {\n      //   // TODO\n      // }\n      item.progress = progress;\n      item.enter = enter;\n      item.pass = pass;\n    });\n\n    // TODO: change\n    if (this.option.timeline && !editing) {\n      this.timeline.update(elapsedTime, this.totalTimeForTimeline, this.axes);\n    }\n    this.tickerFn && this.tickerFn(elapsedTime, this.toMap(this.axes));\n    this.requestID = requestAnimationFrame(this.__tick.bind(this));\n  }\n\n  private calculation() {\n    const newAxes = [];\n    for (let i = 0; i < this.axes.length; i++) {\n      const axis = this.axes[i];\n      let { key, duration, position, delay } = axis;\n      const totalTime = Math.max(...newAxes.map((item) => item.endAt));\n\n      let beginAt = totalTime + delay;\n\n      if (position !== undefined) {\n        if (Number.isFinite(position)) {\n          beginAt = <number>position + delay;\n        } else {\n          const axis = this.getAxis({ key: position });\n          beginAt = axis.endAt + delay;\n        }\n      } else {\n        position = beginAt;\n      }\n\n      newAxes.push({\n        ...initialAxis,\n        key,\n        beginAt: beginAt,\n        endAt: beginAt + duration,\n        duration,\n        delay,\n        position,\n      });\n    }\n  }\n\n  private recalculation(axes) {\n    const newAxes = [];\n\n    for (let i = 0; i < axes.length; i++) {\n      const axis = axes[i];\n      let { key, duration, position, delay } = axis;\n      let totalTime = Math.max(...newAxes.map((item) => item.endAt));\n      let beginAt = totalTime + delay;\n\n      if (position !== undefined) {\n        if (Number.isFinite(position)) {\n          beginAt = <number>position + delay;\n        } else {\n          const axis = this.getAxis({ key: position });\n          beginAt = axis.endAt + delay;\n        }\n      } else {\n        position = beginAt;\n      }\n\n      newAxes.push({\n        ...initialAxis,\n        key,\n        beginAt: beginAt,\n        endAt: beginAt + duration,\n        duration,\n        delay,\n        position,\n      });\n    }\n    return newAxes;\n  }\n\n  private sort() {\n    this.axes.sort((a, b) => {\n      return a.beginAt - b.beginAt;\n    });\n  }\n\n  private toMap(axes: Axis[]): Map<string, Axis> {\n    const map = new Map();\n    axes.forEach((axis) => {\n      map[axis.key] = axis;\n      map.set(axis.key, axis);\n    });\n    return map;\n  }\n}\n","export class TaxisDemo extends HTMLElement {\n  $boxes: NodeListOf<HTMLElement>;\n  $timeline: HTMLElement;\n  width: number;\n  requestID: number;\n  time: number;\n  beginAt: number;\n  resizeObserver: ResizeObserver;\n  isIntersecting: boolean;\n\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n    this.isIntersecting = false;\n    this.shadowRoot.innerHTML = this.template();\n    // Element\n    this.$boxes = this.shadowRoot.querySelectorAll(\".box\");\n    this.$timeline = this.shadowRoot.querySelector(\".timeline\");\n  }\n\n  attributeChangedCallback() {}\n\n  connectedCallback() {\n    setTimeout(() => {\n      // Event\n      this.resizeObserver = new ResizeObserver(this.handleResize.bind(this));\n      this.resizeObserver.observe(this);\n      this.beginAt = Date.now();\n    }, 0);\n  }\n\n  disconnectedCallback() {\n    cancelAnimationFrame(this.requestID);\n    this.resizeObserver.unobserve(this);\n    // this.intersectionObserver.unobserve(this);\n  }\n\n  handleResize(entries) {\n    const { width, height } = entries[0].contentRect;\n    this.width = width;\n  }\n\n  // handleIntersection(entries) {\n  //   const isIntersecting = entries[0].isIntersecting;\n  //   if (this.isIntersecting && !isIntersecting) {\n  //     cancelAnimationFrame(this.requestID);\n  //   }\n  //   if (!this.isIntersecting && isIntersecting) {\n  //     this.render();\n  //   }\n  //   this.isIntersecting = isIntersecting;\n  // }\n\n  template() {\n    return `\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n        }\n        .container {\n        }\n        .box {\n          width: 60px;\n          height: 60px;\n          border-radius: 2px;\n          margin-bottom: 20px;\n          background: linear-gradient(135deg, #545454, #333);\n        }\n        .box:last-child {\n          margin-bottom: 0;\n        }\n        .timeline {\n          margin-top: 20px;\n          height: 200px;\n        }\n        img {\n          width: 100%;\n          margin-top: 12px;\n        }\n      </style>\n      <div class=\"container\">\n        <div class=\"wrap\">\n          <div class=\"box\"></div>\n          <div class=\"box\"></div>\n          <div class=\"box\"></div>\n        </div>\n        <div class=\"timeline\"></div>\n        <img src=\"https://user-images.githubusercontent.com/9010553/111905765-b2864600-8a90-11eb-92e3-8bbe8927c2d7.png\" alt=\"\">\n      </div>\n    `;\n  }\n\n  start(fn) {\n    fn(this.ticker.bind(this));\n  }\n\n  ticker(progresses) {\n    this.$boxes.forEach((box, i) => {\n      box.style.transform = `translateX(${\n        progresses[i] * (this.width - 60)\n      }px)`;\n    });\n  }\n\n  render() {\n    this.requestID = requestAnimationFrame(this.render.bind(this));\n  }\n}\n\nwindow.customElements.define(\"taxis-demo\", TaxisDemo);\n","import { Taxis } from \"../../src/taxis\";\nimport { TaxisDemo } from \"./taxis-demo\";\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n\n  const demo = new TaxisDemo();\n  const taxis = new Taxis({\n    timeline: {\n      container: demo.$timeline,\n      debug: true,\n    },\n  });\n  demo.start((callback) => {\n    taxis\n      .add(\"box#01\", 3 * 1000, 0)\n      .add(\"box#02\", 3 * 1000, -300)\n      .add(\"box#03\", 3 * 1000, -300);\n    taxis.begin();\n    taxis.ticker((time, axes) => {\n      const progresses = [];\n      axes.forEach((axis) => {\n        progresses.push(axis.progress);\n      });\n      callback(progresses);\n    });\n  });\n  document.querySelector(\".timeline\").appendChild(demo);\n\n});\n"]}