{
  "version": 3,
  "sources": ["../src/timeline.ts", "../src/taxis.ts"],
  "sourcesContent": ["export class TaxisTimeline extends HTMLElement {\n  // TODO\n  axes: any;\n  $pane: HTMLElement;\n  $timeline: HTMLElement;\n  $current: HTMLInputElement;\n  $progress: HTMLElement;\n  $labels: NodeListOf<HTMLElement>;\n  $bars: NodeListOf<HTMLElement>;\n  $barsBegin: NodeListOf<HTMLInputElement>;\n  $barsEnd: NodeListOf<HTMLInputElement>;\n  $previous: HTMLElement;\n  $playPause: HTMLElement;\n  $next: HTMLElement;\n  playing: Boolean;\n  previous: Boolean;\n  next: Boolean;\n  skip: number;\n  totalTime: number;\n  private editing: boolean = false;\n\n  constructor(axes, totalTime) {\n    // Always call super first in constructor\n    super();\n    // write element functionality in here\n    this.attachShadow({ mode: \"open\" }); // sets and returns 'this.shadowRoot'\n\n    this.axes = axes;\n    this.shadowRoot.innerHTML = this.template(axes, totalTime);\n    this.$pane = this.shadowRoot.querySelector(\"#pane\");\n    this.$timeline = this.shadowRoot.querySelector(\"#timeline\");\n    this.$current = this.shadowRoot.querySelector(\"#current\");\n    this.$progress = this.shadowRoot.querySelector(\"#progress\");\n    this.$labels = this.shadowRoot.querySelectorAll(\".label\");\n    this.$bars = this.shadowRoot.querySelectorAll(\".bar\");\n    this.$barsBegin = this.shadowRoot.querySelectorAll(\".begin\");\n    this.$barsEnd = this.shadowRoot.querySelectorAll(\".end\");\n    this.$previous = this.shadowRoot.querySelector(\"#previous\");\n    this.$playPause = this.shadowRoot.querySelector(\"#play-pause\");\n    this.$next = this.shadowRoot.querySelector(\"#next\");\n    this.playing = true;\n    this.previous = false;\n    this.next = false;\n    this.skip = -1;\n\n    // event\n    this.$previous.addEventListener(\"click\", (e) => {\n      this.previous = true;\n    });\n    this.$playPause.addEventListener(\"click\", (e) => {\n      this.playing = !this.playing;\n    });\n    this.$next.addEventListener(\"click\", (e) => {\n      this.next = true;\n    });\n    for (let i = 0, len = this.$bars.length; i < len; i++) {\n      const bar = this.$bars[i];\n      const barBegin = this.$barsBegin[i];\n      const barEnd = this.$barsEnd[i];\n      bar.addEventListener(\"click\", (e) => {\n        const target = e.currentTarget as HTMLElement;\n        const idx = Number(target.getAttribute(\"idx\"));\n        this.skip = idx;\n      });\n\n      // TODO: Refactor\n      barBegin.addEventListener(\"input\", (e) => {\n        const time = Number(barBegin.value);\n        if (Number(this.$barsEnd[i].value) < time) {\n          e.preventDefault();\n          return;\n        }\n\n        if (Number.isFinite(this.axes[i].position)) {\n          this.axes[i].position = time;\n          // adjusting the duration so that the endAt doesn't change.\n          this.axes[i].duration =\n            this.axes[i].endAt - (this.axes[i].delay + this.axes[i].position);\n        } else {\n          const target = this.axes.find(\n            (axis) => axis.key === this.axes[i].position\n          );\n          this.axes[i].delay = time - target.endAt;\n          // adjusting the duration so that the endAt doesn't change.\n          this.axes[i].duration =\n            this.axes[i].endAt - (this.axes[i].delay + target.endAt);\n        }\n      });\n\n      // TODO: Refactor\n      barEnd.addEventListener(\"input\", (e) => {\n        const time = Number(barEnd.value);\n        if (time < Number(this.$barsBegin[i].value)) {\n          e.preventDefault();\n          return;\n        }\n\n        if (Number.isFinite(this.axes[i].position)) {\n          this.axes[i].duration =\n            time - (this.axes[i].position + this.axes[i].delay);\n        } else {\n          const target = this.axes.find(\n            (axis) => axis.key === this.axes[i].position\n          );\n          this.axes[i].duration = time - target.endAt - this.axes[i].delay;\n        }\n      });\n    }\n    this.$labels.forEach((label) => {\n      label.addEventListener(\"click\", (e) => {\n        const target = e.currentTarget as HTMLElement;\n        const idx = Number(target.getAttribute(\"idx\"));\n        this.skip = idx;\n      });\n    });\n    this.$current.addEventListener(\"input\", (e) => {\n      this.editing = true;\n      const time = Number(this.$current.value);\n      this.__updateProgressPosition(time);\n      this.__updateBar(this.totalTime);\n    });\n\n    this.$current.addEventListener(\"change\", (e) => {\n      this.editing = false;\n    });\n  }\n\n  attributeChangedCallback() {}\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  getAxes() {\n    return this.axes;\n  }\n\n  get(beginAt) {\n    const now = Date.now();\n    const time = Number(this.$current.value);\n    let elapsedTime = now - beginAt;\n\n    if (!this.playing) {\n      beginAt = now - time;\n      elapsedTime = time;\n    }\n    if (this.editing) {\n      beginAt = now - time;\n      elapsedTime = time;\n    }\n    if (-1 < this.skip) {\n      const axis = this.axes[this.skip];\n      beginAt = now - axis.beginAt;\n      elapsedTime = axis.beginAt;\n      this.skip = -1;\n    }\n    if (this.previous) {\n      this.previous = false;\n      beginAt = now;\n      elapsedTime = 0;\n    }\n    if (this.next) {\n      this.next = false;\n      beginAt = now - this.totalTime;\n      elapsedTime = this.totalTime;\n    }\n\n    return {\n      beginAt,\n      elapsedTime,\n      editing: this.editing,\n    };\n  }\n\n  update(time, totalTime, axes) {\n    this.axes = axes;\n    this.totalTime = totalTime;\n\n    this.$current.setAttribute(\"max\", totalTime);\n    this.$current.value = time;\n\n    this.__updateProgressPosition(time);\n    this.__updateBar(totalTime);\n    this.__updateBarRange(totalTime);\n    this.__updateScale(totalTime);\n  }\n\n  template(axes, total) {\n    let labels = \"\";\n    let bars = \"\";\n    let scaleLabels = \"\";\n    for (let i = 0; i < axes.length; i++) {\n      const axis = axes[i];\n      labels += `<div class=\"row\" id=\"row-${i}\"><div class=\"label\" idx=\"${i}\">${axis.key}</div></div>`;\n      bars += `<div class=\"row\">\n  <div class=\"bar\" idx=\"${i}\"></div>\n  <input class=\"begin\" type=\"range\" min=\"0\" max=\"0\" step=\"10\" value=\"${axis.beginAt}\">\n  <input class=\"end\" type=\"range\" min=\"0\" max=\"0\" step=\"10\" value=\"${axis.endAt}\">\n</div>`;\n    }\n\n    for (let i = 0, sec = Math.floor(total / 1000); i < sec; i++) {\n      scaleLabels += `<div class=\"scale-label\" style=\"--sec: ${i + 1}\">${\n        i + 1\n      }s</div>`;\n    }\n    return `\n      <style>\n        * {\n          box-sizing: border-box;\n        }\n        :host {\n          display: block;\n          height: 100%;\n        }\n        .container {\n          display: flex;\n          flex-direction: column;\n          height: 100%;\n          background-color: #313131;\n          color: #eeeeee;\n          position: relative;\n          --tools-height: 40px;\n          --controls-height: 40px;\n        }\n        .tools {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-shrink: 0;\n          height: var(--tools-height);\n          border-bottom: 1px solid #202020;\n        }\n        .tools__item {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 20px;\n          margin: 0 8px;\n          color: #eeeeee;\n        }\n        .tools__item div {\n          width: 100%;\n          cursor: pointer;\n        }\n        .tools__item div:hover {\n          opacity: .6;\n        }\n        .tools__item svg {\n          fill: currentColor;\n        }\n        .controls {\n          display: flex;\n          flex-shrink: 0;\n          height: var(--controls-height);\n          border-bottom: 1px solid #202020;\n        }\n        .pane {\n          display: flex;\n          flex: 1;\n          overflow: scroll;\n          scroll-behavior: smooth;\n        }\n        .head {\n          flex-shrink: 0;\n          flex-basis: 20%;\n          max-width: 200px;\n          min-width: 0;\n        }\n        .body {\n          flex: 1;\n          position: relative;\n        }\n        .actions {\n          height: 100%;\n          border-right: 1px solid #222322;\n        }\n        .rows {\n          border-right: 1px solid #222322;\n        }\n        .row {\n          display: flex;\n          align-items: center;\n          height: 24px;\n          border-bottom: 1px solid #202020;\n          position: relative;\n        }\n        .row input[type=\"range\"] {\n          position: absolute;\n          inset: 0;\n        }\n        .label {\n          padding-left: 12px;\n          font-size: 12px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          cursor: pointer;\n        }\n        .bar {\n          height: 100%;\n          background-color: #545454;\n          opacity: .5;\n          transform-origin: left;\n          cursor: pointer;\n          position: relative;\n        }\n        .bar::before {\n          content: \"\";\n          display: block;\n          width: 6px;\n          position: absolute;\n          left: 0;\n          top: 0;\n          bottom: 0;\n          margin: 4px;\n          border-radius: 2px;\n          background-color: darkgray;\n        }\n        .bar::after {\n          content: \"\";\n          display: block;\n          width: 6px;\n          position: absolute;\n          right: 0;\n          top: 0;\n          bottom: 0;\n          margin: 4px;\n          border-radius: 2px;\n          background-color: darkgray;\n        }\n        .bar.bar--active {\n          opacity: 1;\n        }\n        .progress {\n          position: absolute;\n          top: var(--tools-height);\n          bottom: 0;\n          left: 0;\n          width: 2px;\n          margin-left: min(20%, 200px);\n          background-color: #71A0EB;\n          opacity: 0.6;\n        }\n        .progress::before {\n          content: \"\";\n          display: block;\n          width: 20px;\n          height: 30px;\n          background-color: #53aeff;\n          margin-left: -9px;\n        }\n        .progress::after {\n          content: \"\";\n          display: block;\n          border-top: 10px solid #53aeff;\n          border-left: 10px solid transparent;\n          border-right: 10px solid transparent;\n          margin-left: -9px;\n        }\n        .current {\n          position: absolute;\n          top: var(--tools-height);\n          height: var(--controls-height);\n          left: -12px;\n          right: -12px;\n          margin-left: min(20%, 200px);\n        }\n        input[type=\"range\"] {\n          -webkit-appearance: none;\n          appearance: none;\n          margin: 0;\n          cursor: pointer;\n          outline: none;\n        }\n        input[type=\"range\"]::-webkit-slider-thumb {\n          opacity: 0;\n        }\n        input[type=\"range\"]::-moz-range-thumb {\n          opacity: 0;\n        }\n        /* Firefox\u3067\u70B9\u7DDA\u304C\u5468\u308A\u306B\u8868\u793A\u3055\u308C\u3066\u3057\u307E\u3046\u554F\u984C\u306E\u89E3\u6D88 */\n        input[type=\"range\"]::-moz-focus-outer {\n          border: 0;\n        }\n        .current input[type=\"range\"] {\n          height: var(--controls-height);\n          width: 100%;\n          background: transparent;\n        }\n        input.begin[type=\"range\"],\n        input.end[type=\"range\"] {\n          height: 100%;\n          width: calc(100% + 12px);\n          background: transparent;\n          pointer-events: none;\n          margin-left: -6px;\n        }\n        input.begin[type=\"range\"]::-webkit-slider-thumb,\n        input.end[type=\"range\"]::-webkit-slider-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          pointer-events: auto;\n          opacity: 0;   \n          width: 12px;\n          height: 100%;\n          cursor: ew-resize;\n        }\n        input.begin[type=\"range\"]::-moz-range-thumb,\n        input.end[type=\"range\"]::-moz-range-thumb {\n          -webkit-appearance: none;\n          appearance: none;\n          pointer-events: auto;\n          opacity: 0;   \n          width: 12px;\n          height: 100%;\n          cursor: ew-resize;\n        }\n        input.begin[type=\"range\"]::-webkit-slider-thumb {\n          background: darkgreen;\n          transform: translateX(50%);\n        }\n        input.begin[type=\"range\"]::-moz-range-thumb {\n          background: darkgreen;\n          transform: translateX(50%);\n        }\n        input.end[type=\"range\"]::-webkit-slider-thumb {\n          background: indianred;\n          transform: translateX(-50%);\n        }\n        input.end[type=\"range\"]::-moz-range-thumb {\n          background: indianred;\n          transform: translateX(-50%);\n        }\n        .scale {\n          position: relative;\n          height: 100%;\n        }\n        .scale-s,\n        .scale-100ms {\n          height: 50%;\n        }\n        .scale-s {\n          /*\n            total / 1s \n            e.g. 6000 / 1000\n            x / 1000 = 6\n            calc(100% / calc(var(--total) / 1000))\n           */\n          --x: calc(100% / calc(var(--total) / 1000));\n          background: repeating-linear-gradient(90deg, transparent 0, transparent calc(var(--x) - 1px), #202020 calc(var(--x) - 1px), #202020 var(--x));\n          border-bottom: 1px solid #202020;\n        }\n        .scale-100ms {\n          --x: calc(100% / calc(var(--total) / 1000) / 10);\n          background: repeating-linear-gradient(90deg, transparent 0, transparent calc(var(--x) - 1px), #202020 calc(var(--x) - 1px), #202020 var(--x));\n        }\n        .scale-label {\n          --x: calc(100% / calc(var(--total) / 1000));\n          position: absolute;\n          top: 0;\n          left: calc(var(--x) * var(--sec));\n          font-size: 10px;\n          font-style: italic;\n          transform: translateX(calc(-100% - 4px));\n        }\n      </style>\n      <div class=\"container\">\n        <div class=\"tools\">\n          <div class=\"tools__item\">\n            <div id=\"previous\">\n              <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.75 20C2.75 20.5523 3.19772 21 3.75 21C4.30228 21 4.75 20.5523 4.75 20L4.75 4C4.75 3.44772 4.30229 3 3.75 3C3.19772 3 2.75 3.44772 2.75 4V20Z\"/>\n                <path d=\"M20.75 19.0526C20.75 20.4774 19.1383 21.305 17.9803 20.4748L7.51062 12.9682C6.50574 12.2477 6.54467 10.7407 7.5854 10.073L18.0551 3.35665C19.2198 2.60946 20.75 3.44583 20.75 4.82961L20.75 19.0526Z\"/>\n              </svg>\n            </div>\n          </div>\n          <div class=\"tools__item\">\n            <div id=\"play-pause\">\n              <svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n                <!-- Generator: Sketch 59.1 (86144) - https://sketch.com -->\n                <title>ic_fluent_video_play_pause_24_filled</title>\n                <desc>Created with Sketch.</desc>\n                <g id=\"\uD83D\uDD0D-Product-Icons\" stroke=\"none\" stroke-width=\"1\" >\n                    <g id=\"ic_fluent_video_play_pause_24_filled\" fill-rule=\"nonzero\">\n                        <path d=\"M3.65140982,6.61646219 L11.1528787,11.3693959 C11.3672679,11.5052331 11.4827597,11.722675 11.4993749,11.9464385 L11.4984593,7.25 C11.4984593,6.83578644 11.8342458,6.5 12.2484593,6.5 L15.2484593,6.5 C15.6626729,6.5 15.9984593,6.83578644 15.9984593,7.25 L15.9984593,16.75 C15.9984593,17.1642136 15.6626729,17.5 15.2484593,17.5 L12.2484593,17.5 C11.8342458,17.5 11.4984593,17.1642136 11.4984593,16.75 L11.4993494,12.0597632 C11.4826318,12.2835468 11.3670166,12.5009613 11.1525249,12.6366956 L3.65105604,17.3837618 C3.15168144,17.6997752 2.5,17.3409648 2.5,16.75 L2.5,7.25 C2.5,6.65884683 3.15205264,6.30006928 3.65140982,6.61646219 Z M21.2477085,6.50037474 C21.661922,6.50037474 21.9977085,6.83616118 21.9977085,7.25037474 L21.9977085,16.7496253 C21.9977085,17.1638388 21.661922,17.4996253 21.2477085,17.4996253 L18.2477085,17.4996253 C17.8334949,17.4996253 17.4977085,17.1638388 17.4977085,16.7496253 L17.4977085,7.25037474 C17.4977085,6.83616118 17.8334949,6.50037474 18.2477085,6.50037474 L21.2477085,6.50037474 Z\" id=\"\uD83C\uDFA8-Color\"></path>\n                    </g>\n                </g>\n              </svg>\n            </div>\n          </div>\n          <div class=\"tools__item\">\n            <div id=\"next\">\n              <svg   viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M21 4C21 3.44772 20.5523 3 20 3C19.4477 3 19 3.44772 19 4V20C19 20.5523 19.4477 21 20 21C20.5523 21 21 20.5523 21 20V4Z\"/>\n                <path d=\"M3 4.94743C3 3.5226 4.61175 2.69498 5.7697 3.52521L16.2394 11.0318C17.2443 11.7523 17.2053 13.2593 16.1646 13.927L5.69492 20.6434C4.53019 21.3905 3 20.5542 3 19.1704V4.94743Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n        <div class=\"controls\">\n          <div class=\"head\"><div class=\"actions\"></div></div>\n          <div class=\"body\">\n            <div class=\"scale\" id=\"scale\" style=\"--total: ${total}\">\n              <div class=\"scale-s\"></div>\n              <div class=\"scale-100ms\"></div>\n              ${scaleLabels}\n            </div>\n          </div>\n        </div>\n        <div id=\"pane\" class=\"pane\">\n          <div class=\"head\">\n            <div class=\"rows\">\n              ${labels}\n            </div>\n          </div>\n          <div id=\"timeline\" class=\"body\">\n            <div class=\"rows\">\n              ${bars}\n            </div>\n          </div>\n        </div>\n        <div class=\"current\">\n          <input id=\"current\" type=\"range\" min=\"0\" max=\"0\" step=\"any\" value=\"0\">\n        </div>\n        <div id=\"progress\" class=\"progress\"></div>\n      </div>\n    `;\n  }\n\n  __updateScale(total) {\n    const test = this.shadowRoot.querySelector(\".test\");\n    test && test.remove();\n    this.shadowRoot.querySelectorAll(\".scale-label\").forEach((elm) => {\n      elm.remove();\n    });\n    const scale = this.shadowRoot.querySelector<HTMLElement>(\".scale\");\n    scale.style.setProperty(\"--total\", total);\n\n    let scaleLabels = \"\";\n    for (let i = 0, sec = Math.floor(total / 1000); i < sec; i++) {\n      scaleLabels += `<div class=\"scale-label\" style=\"--sec: ${i + 1}\">${\n        i + 1\n      }s</div>`;\n    }\n    const fragment = document.createElement(\"div\");\n    fragment.className = \"test\";\n    fragment.innerHTML = scaleLabels;\n    this.shadowRoot.querySelector(\".scale\").appendChild(fragment);\n  }\n\n  __updateProgressPosition(time) {\n    const width = this.$timeline.clientWidth;\n    const x = Math.min(time / this.totalTime, 1) * width;\n    this.$progress.style.transform = `translateX(${x}px)`;\n  }\n\n  __updateBarRange(totalTime) {\n    for (let i = 0; i < this.$bars.length; i++) {\n      const axis = this.axes[i];\n      this.$barsBegin[i].setAttribute(\"max\", totalTime);\n      this.$barsBegin[i].value = axis.beginAt;\n      this.$barsEnd[i].setAttribute(\"max\", totalTime);\n      this.$barsEnd[i].value = axis.endAt;\n    }\n  }\n\n  __updateBar(totalTime: number) {\n    const width = this.$timeline.clientWidth;\n\n    const scaleX = width / totalTime;\n    for (let i = 0; i < this.$bars.length; i++) {\n      const axis = this.axes[i];\n\n      const barBegin = axis.beginAt * scaleX;\n      const barWidth = (axis.endAt - axis.beginAt) * scaleX;\n\n      this.$bars[i].style.transform = `translateX(${barBegin}px)`;\n      this.$bars[i].style.width = `${barWidth}px`;\n      if (0 < axis.progress && !axis.pass) {\n        this.$bars[i].classList.add(\"bar--active\");\n      } else {\n        this.$bars[i].classList.remove(\"bar--active\");\n      }\n    }\n  }\n}\n\nwindow.customElements.define(\"taxis-timeline\", TaxisTimeline);\n", "import { TaxisTimeline } from \"./timeline\";\n\ntype Axis = {\n  key: string;\n  beginAt?: number; // TODO: delete\n  endAt?: number; // TODO: delete\n  duration: number;\n  delay: number;\n  position: string | number;\n  progress: number;\n  enter: boolean;\n  pass: boolean;\n};\n\ntype Axes = Map<string, Axis>;\n\ntype Option = {\n  timeline?: HTMLElement;\n};\n\nconst initialAxis: Axis = {\n  key: \"\",\n  beginAt: 0,\n  endAt: 0,\n  duration: 0,\n  delay: 0,\n  position: 0,\n  progress: 0,\n  enter: false,\n  pass: false,\n};\n\nconst Events = {\n  ENTER: \"enter\",\n  LEAVE: \"leave\",\n  PASS: \"pass\",\n} as const;\n\ntype EventName = typeof Events[keyof typeof Events];\n\nexport class Taxis {\n  private axes: Axis[];\n  private beginAt: number;\n  private requestID: number;\n  private tickerFn: (delta: number, axis: Axes) => void;\n  private timeline: TaxisTimeline;\n\n  get totalTime() {\n    if (!this.axes.length) {\n      return 0;\n    }\n    return Math.max(...this.axes.map((item) => item.endAt));\n  }\n\n  get totalTimeForTimeline() {\n    return this.totalTime + 500;\n  }\n\n  get everyPassed() {\n    return this.axes.every((item) => item.pass);\n  }\n\n  constructor(private readonly option: Option = {}) {\n    this.axes = [];\n  }\n\n  restart() {\n    this.beginAt = Date.now();\n  }\n\n  getAxis({ key }) {\n    return this.axes.find((item) => item.key === key);\n  }\n\n  getAxes() {\n    return this.axes;\n  }\n\n  // entered(key: string) {\n  // }\n  //\n  // left(key: string) {\n  // }\n  //\n  // passed(key: string) {\n  // }\n\n  add(\n    key: string,\n    duration: number,\n    delay: number = 0,\n    position?: number | string\n  ) {\n    let beginAt = this.totalTime + delay;\n    if (position !== undefined) {\n      if (Number.isFinite(position)) {\n        beginAt = <number>position + delay;\n      } else {\n        const axis = this.getAxis({ key: position });\n        beginAt = axis.endAt + delay;\n      }\n    } else {\n      const last = this.axes[this.axes.length - 1];\n      position = !!last ? last.key : 0;\n    }\n\n    this.axes.push({\n      ...initialAxis,\n      key,\n      beginAt,\n      endAt: beginAt + duration,\n      duration,\n      delay,\n      position,\n    });\n    this.sort();\n    return this;\n  }\n\n  begin() {\n    // TODO: delete\n    if (this.option.timeline) {\n      this.timeline = new TaxisTimeline(this.axes, this.totalTimeForTimeline);\n      this.option.timeline.appendChild(this.timeline);\n    }\n\n    this.beginAt = Date.now();\n    this.__tick();\n  }\n\n  reset() {\n    cancelAnimationFrame(this.requestID);\n  }\n\n  ticker(fn: (delta: number, axis: Axes) => void) {\n    this.tickerFn = fn;\n  }\n\n  private __tick() {\n    let beginAt = this.beginAt;\n    let elapsedTime = Date.now() - beginAt;\n    let editing = false;\n    if (this.option.timeline) {\n      // TODO: thin out\n      this.axes = this.recalculation(this.timeline.getAxes());\n      const {\n        beginAt: __beginAt,\n        elapsedTime: __elapsedTime,\n        editing: __editing,\n      } = this.timeline.get(this.beginAt);\n      beginAt = __beginAt;\n      elapsedTime = __elapsedTime;\n      editing = __editing;\n    }\n\n    this.beginAt = beginAt;\n\n    this.axes.forEach((item, i) => {\n      const tick = elapsedTime - item.beginAt;\n      const progress = Math.max(0, Math.min(tick / item.duration, 1));\n      const enter = item.beginAt <= elapsedTime;\n      const pass = item.endAt < elapsedTime;\n\n      // // When passed through\n      // if (pass && !item.pass) {\n      //   // TODO\n      // }\n      // // When entered\n      // if (enter && !item.enter) {\n      //   // TODO\n      // }\n      // if (progress === 0 && 0 < item.progress) {\n      //   // TODO\n      // }\n      item.progress = progress;\n      item.enter = enter;\n      item.pass = pass;\n    });\n\n    // TODO: change\n    if (this.option.timeline && !editing) {\n      this.timeline.update(elapsedTime, this.totalTimeForTimeline, this.axes);\n    }\n    this.tickerFn && this.tickerFn(elapsedTime, this.toMap(this.axes));\n    this.requestID = requestAnimationFrame(this.__tick.bind(this));\n  }\n\n  private calculation() {\n    const newAxes = [];\n    for (let i = 0; i < this.axes.length; i++) {\n      const axis = this.axes[i];\n      let { key, duration, position, delay } = axis;\n      const totalTime = Math.max(...newAxes.map((item) => item.endAt));\n\n      let beginAt = totalTime + delay;\n\n      if (position !== undefined) {\n        if (Number.isFinite(position)) {\n          beginAt = <number>position + delay;\n        } else {\n          const axis = this.getAxis({ key: position });\n          beginAt = axis.endAt + delay;\n        }\n      } else {\n        position = beginAt;\n      }\n\n      newAxes.push({\n        ...initialAxis,\n        key,\n        beginAt: beginAt,\n        endAt: beginAt + duration,\n        duration,\n        delay,\n        position,\n      });\n    }\n  }\n\n  private recalculation(axes) {\n    const newAxes = [];\n\n    for (let i = 0; i < axes.length; i++) {\n      const axis = axes[i];\n      let { key, duration, position, delay } = axis;\n      let totalTime = Math.max(...newAxes.map((item) => item.endAt));\n      let beginAt = totalTime + delay;\n\n      if (position !== undefined) {\n        if (Number.isFinite(position)) {\n          beginAt = <number>position + delay;\n        } else {\n          const axis = this.getAxis({ key: position });\n          beginAt = axis.endAt + delay;\n        }\n      } else {\n        position = beginAt;\n      }\n\n      newAxes.push({\n        ...initialAxis,\n        key,\n        beginAt: beginAt,\n        endAt: beginAt + duration,\n        duration,\n        delay,\n        position,\n      });\n    }\n    return newAxes;\n  }\n\n  private sort() {\n    this.axes.sort((a, b) => {\n      return a.beginAt - b.beginAt;\n    });\n  }\n\n  private toMap(axes: Axis[]): Map<string, Axis> {\n    const map = new Map();\n    axes.forEach((axis) => {\n      map[axis.key] = axis;\n      map.set(axis.key, axis);\n    });\n    return map;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
